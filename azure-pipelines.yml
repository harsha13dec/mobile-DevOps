# Xamarin.iOS
# Build a Xamarin.iOS app and Xamarin.UITest assembly.
# Add steps that install certificates, test, sign, and distribute the app, save build artifacts, and more:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/xamarin

pool:
  vmImage: 'macOS-latest'

trigger:
- main

variables:
- group: 'variables'
- group: jsonvariablegroup
- name: property.production
  value: $(Production)
steps:
# To manually select a Xamarin SDK version on the Hosted macOS agent, enable this script with the SDK version you want to target
# https://go.microsoft.com/fwlink/?linkid=871629
- script: /bin/bash -c "sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh 6_12_16"
  displayName: 'Select Xamarin SDK version'
  enabled: true
- task: FileTransform@1
  inputs:
    folderPath: '$(System.DefaultWorkingDirectory)/CICD/CICD.iOS/'
    fileType: 'json'
    targetFiles: 'settings.json'
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/*.sln'

- task: DownloadSecureFile@1
  inputs:
    secureFile: '$(ProvisioningProfile-FileName)'
- task: DownloadSecureFile@1
  inputs:
    secureFile: '$(AppleCertificate-FileName)'


- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: '$(AppleCertificate-FileName)'
    certPwd: '$(AppleCertificate-Password)'
    keychain: 'temp'
- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: '$(ProvisioningProfile-FileName)'
- task: ios-bundle-version@1
  inputs:
    sourcePath: 'CICD/CICD.iOS/Info.plist'
    versionCodeOption: 'buildid'
    versionCode: '$(Build.BuildId)'
    versionName: '1.1.$(Build.BuildId)'
    printFile: true
- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'sonar-ios-connection'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'xamarin-ios_xamarin-ios_AYYWwS0pstQhhO4Rt8oK'
    cliSources: '.'
- task: XamariniOS@2
  inputs:
    solutionFile: '**/*.sln'
    configuration: 'Release'
    packageApp: true
    runNugetRestore: true
    signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
    signingProvisioningProfileID: '$(APPLE_PROV_PROFILE_UUID)'
- task: SonarQubeAnalyze@5

- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'
- task: CopyFiles@2
  inputs:
    contents: '**/*.ipa'
    targetFolder: '$(build.artifactStagingDirectory)'
    overWrite: true

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(build.artifactStagingDirectory)' 
    artifactName: 'drop' 
    publishLocation: 'Container'
